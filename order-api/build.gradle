plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.8'
    id 'io.spring.dependency-management' version '1.1.6'
}

bootJar { enabled = false }
jar { enabled = true }

group = 'org.silluck.order'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl {
        extendsFrom compileClasspath
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencies {

    implementation project(':silluck-domain')

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //eureka client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation ('it.ozimov:embedded-redis:0.7.3') {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }

    //test 위한 DB
    testImplementation 'com.h2database:h2'

    //RDB
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'mysql:mysql-connector-java:8.0.28'

    // QueryDSL 의존성 추가
    implementation 'com.querydsl:querydsl-core:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // 올바른 annotationProcessor 설정
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    // 다른 annotationProcessor 의존성 추가
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    compileOnly 'org.projectlombok:lombok'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //BaseEntity 사용
    implementation 'org.springframework.data:spring-data-envers'

    //Swagger
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootJar {
    enabled = true
    jar.enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}
